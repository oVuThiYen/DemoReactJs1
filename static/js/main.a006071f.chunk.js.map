{"version":3,"sources":["User.js","Search.js","TableDataRow.js","DataTable.js","EditUser.js","App.js","serviceWorker.js","index.js"],"names":["User","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isChange","event","name","target","value","setState","defineProperty","checkStatus","showForm","react_default","a","createElement","className","type","placeholder","onChange","onClick","tel","permission","add","state","id","React","Component","Search","showBtn","connectSearch","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","tempValue","checkConnectprops","stop","_x","apply","arguments","_this2","aria-label","aria-describedby","dl","DataTableRow","permissionShow","editClick","editFunClick","changeEditUserStatus","deleteClick","idUser","scope","Stt","UserName","Tel","Permission","role","DataTable","deleteUser","mapDataUser","dataUserProps","map","key","TableDataRow","user","editFun","EditUser","newState","objectSpread","userEditObject","saveButton","_this$state","info","getUserEditInfo","isShowEditForm","editUserStatus","userObj","App","getTextSearch","searchText","getNewUserData","item","items","data","push","changeStatus","editUser","usernew","toConsumableArray","temp","filter","DataUser","localStorage","getItem","setItem","JSON","parse","stringify","ketqua","indexOf","src_Search","src_EditUser","src_DataTable","src_User","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a006071f.chunk.js","sourcesContent":["import React from 'react';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      id: '',\n      name: '',\n      tel: '',\n      permission: '',\n    }\n  }\n\n  isChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n  checkStatus = () => {\n    if(this.props.showForm) {\n      return (\n        <div className=\"card border-info\">\n          <div className=\"card-body\">\n            <p>Thêm mới user</p>\n            <form>\n              <div className=\"form-group\">\n                <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Tên user\" onChange={(event) => this.isChange(event)} />\n              </div>\n              <div className=\"form-group\">\n                <input type=\"text\" name=\"tel\" className=\"form-control\" placeholder=\"Điện thoại\" onChange={(event) => this.isChange(event)} />\n              </div>\n              <div className=\"form-group\">\n                <select className=\"form-control\" name=\"permission\" onChange={(event) => this.isChange(event)} >\n                  <option>Chọn quyền mặc định</option>\n                  <option>Admin</option>\n                  <option>User</option>\n                  <option>Moderator</option>\n                </select>\n              </div>\n              <button type=\"reset\" className=\"btn btn-primary\" onClick={(name, tel, permission) => this.props.add(this.state.name, this.state.tel, this.state.permission) }>Thêm mới</button>\n            </form> \n          </div>\n        </div>\n      )\n    }\n  }\n  render() {\n    return(\n      <div>\n        { this.checkStatus() }\n      </div>\n    )\n  }\n}\n\nexport default User\n","import React from 'react';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tempValue: ''\n    }\n  }\n  showBtn = () => {\n    if(this.props.showForm) {\n      return <div className=\"btn btn-outline-secondary mb-2 btn-block\" onClick={this.props.connectSearch}>Đóng lại</div>\n    } else {\n      return <div className=\"btn btn-outline-info mb-2 btn-block\" onClick={this.props.connectSearch}>Thêm mới</div>\n    }\n  }\n\n  isChange = async (event) => {\n    await this.setState({\n      tempValue: event.target.value\n    })\n    this.props.checkConnectprops(this.state.tempValue);\n  }\n  render(){\n    return(\n      <div className=\"col-md-4\">\n        <div className=\"input-group mb-3 mt-5\">\n          <input type=\"text\" className=\"form-control\" placeholder=\"Search\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" onChange={(event) => this.isChange(event)} />\n          <div className=\"input-group-append\">\n            <button type=\"button\" className=\"btn btn-info\" onClick={(dl) => this.props.checkConnectprops(this.state.tempValue)}>Search</button>\n          </div>\n        </div>\n        {this.showBtn()}\n      </div>\n    )\n  }\n}\n\nexport default Search\n","import React from 'react';\n\nclass DataTableRow extends React.Component {\n  permissionShow = () => {\n    \n  }\n\n  editClick = () => {\n    this.props.editFunClick();\n    this.props.changeEditUserStatus();\n  }\n\n  deleteClick = (idUser) => {\n    this.props.deleteClick(idUser);\n  }\n\n  render(){\n    return(\n      <tr>\n        <th scope=\"row\">{this.props.Stt+1}</th>\n        <td>{this.props.UserName}</td>\n        <td>{this.props.Tel}</td>\n        <td>{this.props.Permission}</td>\n        <td>\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n            <button type=\"button\" className=\"btn btn-warning\" onClick={this.editClick}>Sửa</button>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={(idUser) => this.deleteClick(this.props.id)}>Xoá</button>\n          </div>\n        </td>\n      </tr>\n    )\n  }\n}\n\nexport default DataTableRow\n","import React from 'react';\nimport TableDataRow from './TableDataRow'\n\nclass DataTable extends React.Component {\n\n  deleteClick = (idUser) => {\n    this.props.deleteUser(idUser);\n  }\n\n  mapDataUser = () => this.props.dataUserProps.map((value,key) => (\n    <TableDataRow\n      changeEditUserStatus={() => this.props.changeEditUserStatus()}\n      editFunClick={(user) => this.props.editFun(value)}\n      key={key}\n      Stt={key}\n      UserName={value.name}\n      Tel={value.tel}\n      Permission={value.permission}\n      id={value.id}\n      deleteClick = {this.deleteClick}\n    />\n  ))\n  \n  render(){\n    return(\n      <div className=\"col\">\n        <table className=\"table table-striped table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Stt</th>\n              <th scope=\"col\">Tên</th>\n              <th scope=\"col\">Sđt</th>\n              <th scope=\"col\">Quyền</th>\n              <th scope=\"col\">Thao tác</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.mapDataUser()}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default DataTable\n","import React from 'react';\n\nclass EditUser extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.userEditObject.id,\n      name: this.props.userEditObject.name,\n      tel: this.props.userEditObject.tel,\n      permission: this.props.userEditObject.permission,\n      userObj: {}\n    }\n  }\n\n  isChange = (event) => {\n    const newState = {...this.props.userEditObject}\n    const name = event.target.name;\n    newState[name] = event.target.value;\n    // const name = event.target.name;\n    // const value = event.target.value;\n    this.setState({...newState})\n  }\n\n  saveButton = () => {\n    const { id, name, tel, permission } = this.state\n    const info = { id, name, tel, permission }\n    this.props.getUserEditInfo(info);\n    this.props.changeEditUserStatus();\n  }\n\n  isShowEditForm = () => {\n    if(this.props.editUserStatus) {\n      return(\n        <div className=\"card border-info\">\n          <div className=\"card-body\">\n            <p className=\"text-center\">Sửa user</p>\n            <form>\n              <div className=\"form-group\">\n                <input type=\"text\" onChange={this.isChange} value={this.state.name} className=\"form-control\" name=\"name\" placeholder=\"Tên user\" />\n              </div>\n              <div className=\"form-group\">\n                <input type=\"text\" name=\"tel\" onChange={this.isChange} value={this.state.tel} className=\"form-control\" placeholder=\"Điện thoại\" />\n              </div>\n              <div className=\"form-group\">\n                <select className=\"form-control\" onChange={this.isChange} name=\"permission\" value={this.state.permission}>\n                  <option>Chọn quyền mặc định</option>\n                  <option>Admin</option>\n                  <option>User</option>\n                  <option>Moderator</option>\n                </select>\n              </div>\n              <button type=\"reset\" className=\"btn btn-warning\" onClick={this.saveButton}>Lưu</button>\n            </form> \n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"col-md-4 mb-2\">\n        {this.isShowEditForm()}\n      </div>\n    )\n  }\n}\nexport default EditUser\n","import React from 'react';\nimport './App.css';\nimport User from './User';\nimport Search from './Search';\nimport DataTable from './DataTable';\nimport DataUser from './Data.json';\nimport EditUser from './EditUser';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showForm: false,\n      data: DataUser,\n      searchText: '',\n      editUserStatus: false,\n      userEditObject: {},\n      userObj: {}\n    }\n  }\n\n  componentWillMount () {\n    if(localStorage.getItem('userData') === null) {\n      localStorage.setItem('userData', []);\n    }\n    else {\n      var temp = JSON.parse(localStorage.getItem('userData'));\n      this.setState({\n        data: temp\n      })\n    }\n  }\n\n  changeEditUserStatus = () => {\n    this.setState({\n      editUserStatus: !this.state.editUserStatus\n    })\n  }\n\n  getTextSearch = (dl) => {\n    this.setState({\n      searchText: dl\n    })\n  }\n\n  getNewUserData = (name, tel, permission) => {\n    var item ={};\n    item.id = '';\n    item.name = name;\n    item.tel = tel;\n    item.permission = permission;\n    var items= this.state.data;\n    items.push(item)\n    this.setState({\n      data: items\n    })\n  }\n\n  changeStatus = () => {\n    this.setState({\n      showForm: !this.state.showForm\n    })\n  }\n\n  editUser = (user) => {\n    this.setState({\n      userEditObject: user\n    })\n  }\n\n  getUserEditInfo = (info) => {\n    var usernew = [...this.state.data]\n    usernew.map((value, key) => {\n      if(value.id === info.id) {\n        value.name = info.name;\n        value.tel = info.tel;\n        value.permission = info.permission;\n      }\n    })\n    this.setState({\n      userObj: info,\n      data: usernew\n    })\n  }\n\n  deleteUser = (idUser) => {\n    let temp = [...this.state.data]\n    temp = temp.filter(item => item.id !== idUser)\n    this.setState({\n      data: temp,\n    })\n  }\n\n  render() {\n    localStorage.setItem('userData', JSON.stringify(DataUser));\n    const ketqua = this.state.data.filter(item => item.name.indexOf(this.state.searchText) !== -1)\n    return (\n      <div className=\"App\">\n        <header>\n          <h1 className=\"mt-5\">Quản lý dữ liệu bằng ReactJs</h1>\n        </header>\n        <div className=\"container\">\n          <div className=\"row\">\n            <Search\n              checkConnectprops={this.getTextSearch}\n              connectSearch={this.changeStatus}\n              showForm={this.state.showForm}\n            />\n          </div>\n          <div className=\"row\">\n            <EditUser\n              getUserEditInfo= {this.getUserEditInfo}\n              editUserStatus={this.state.editUserStatus}\n              changeEditUserStatus={this.changeEditUserStatus}\n              userEditObject={this.state.userEditObject}\n            />\n          </div>\n          <div className=\"row\">\n            <DataTable\n              editFun={this.editUser}\n              dataUserProps={ketqua}\n              changeEditUserStatus={this.changeEditUserStatus}\n              deleteUser={this.deleteUser}\n            />\n            <User\n              add={this.getNewUserData}\n              showForm={this.state.showForm}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}